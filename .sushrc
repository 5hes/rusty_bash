case $- in
    *i*) ;;
      *) return;;
esac

PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\b\[\033[00m\]\[\033[01;35m\]\w\[\033[00m\](debug)🍣 '
PS2='> '
alias ll='ls -l'

# completion test
# thanks to: https://blog.cybozu.io/entry/2016/09/26/080000

_dummy () {
	COMPREPLY=( $(compgen -W "one two" -- "${cur}" ) ) 
} && complete -F _dummy hoge

_git_comp () {
	if [ "$COMP_CWORD" = 1 ] ; then 
		CANDS=( $( git |& grep '^  *[a-z]' | awk '{print $1}') ) 
		COMPREPLY=( $(compgen -W "${CANDS[@]}" -- "${cur}") ) 
	elif [ "$COMP_CWORD" = 2 -a "$prev" = switch ] ; then
		COMPREPLY=( $(compgen -W "$( git branch | tr -d '*' )" -- "${cur}" ) ) 
	elif [ "$COMP_CWORD" = 2 -a "$prev" = merge ] ; then
		COMPREPLY=( $(compgen -W "$( git branch | tr -d '*' )" -- "${cur}" ) ) 
	elif [ "$COMP_CWORD" = 2 -a "$prev" = diff ] ; then
		COMPREPLY=( $(compgen -W "$( git branch | tr -d '*' ) $(compgen -f)" -- "${cur}" ) ) 
	fi
} && complete -F _git_comp git
